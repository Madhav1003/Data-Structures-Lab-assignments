#include <iostream>
#define MAX 100

using namespace std;

void printNGE(int arr[], int n) {
    int stack[MAX];
    int top = -1;

    int nge[MAX];  // to store next greater elements

    // initialize all nge values to -1
    for (int i = 0; i < n; i++) {
        nge[i] = -1;
    }

    for (int i = 0; i < n; i++) {
        // While stack is not empty and current element is greater than element at top of stack
        while (top != -1 && arr[i] > arr[stack[top]]) {
            nge[stack[top]] = arr[i];
            top--;
        }
        // push current index to stack
        stack[++top] = i;
    }

    // Elements remaining in stack have no next greater element, nge is already -1 for them

    // Print the results
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " --> " << nge[i] << endl;
    }
}

int main() {
    int arr[] = {4, 5, 2, 25};
    int n = sizeof(arr) / sizeof(arr[0]);
    printNGE(arr, n);
    return 0;
}
